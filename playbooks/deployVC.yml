---
- name: Deploy VC
  hosts: localhost
  gather_facts: False
  vars_files:
    - ../answerfile.yml
  tasks:
    - name: Mount VC installer
      action: mount name='/mnt/VCSA' src="{{ vcIso }}" opts=loop fstype=iso9660 state=mounted
    - name: Create JSON template file for external PSC
      template: 
        src=../templates/PSC_on_ESXi.json 
        dest=/tmp/PSC_on_ESXi.json 
      when: vcenter.ip  !=  vcenter.psc_ip
      tags: psc
    - debug:
        msg: "Next step will take about 20 minutes if PSC has not been previously deployed, so go grab some coffee !!!"
    - name: Perform VC CLI Install for PSC
      deployVC:
        pESX: "{{ physicalESX.host }}"
        vmname: "{{ vcenter.name }}"
        pESX_user: "{{ physicalESX.user }}"
        pESX_passwd: "{{ physicalESX.password }}"
        templ: "PSC_on_ESXi.json"
      when: vcenter.ip  !=  vcenter.psc_ip
    - name: Create JSON template file for embeded PSC
      template: 
        src=../templates/vCSA_on_ESXi.json 
        dest=/tmp/vCSA_on_ESXi.json
      when: vcenter.ip  ==  vcenter.psc_ip
    - name: Create JSON template file for external PSC
      template: 
        src=../templates/VC_on_ESXi.json
        dest=/tmp/vCSA_on_ESXi.json
      when: vcenter.ip  !=  vcenter.psc_ip
    - debug:
        msg: "Next step will take about 20 minutes if VC has not been previously deployed, so go grab some coffee !!!"
    - name: Perform VC CLI Install
      deployVC:
        pESX: "{{ physicalESX.host }}"
        vmname: "{{ vcenter.name }}"
        pESX_user: "{{ physicalESX.user }}"
        pESX_passwd: "{{ physicalESX.password }}"
        templ: "vCSA_on_ESXi.json"
    - name: Unmount ESXi installer
      action: mount name='/mnt/VCSA' src="{{ esxIso }}" fstype=iso9660 state=absent
    - name: Delete the temporary JSON template file
      file: path=/tmp/vCSA_on_ESXi.json state=absent
    - name: Create Datacenter
      vmware_datacenter:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        datacenter_name: "{{ vcenter.datacenter }}"
        state: present
        validate_certs: False
    - name: Create Clusters
      vmware_cluster:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        datacenter_name: "{{ vcenter.datacenter }}"
        cluster_name: "{{ item.key }}"
        validate_certs: False
        enable_ha: "{{ item.value.ha }}"
        enable_drs: "{{ item.value.drs }}"
        enable_vsan: "{{ item.value.vsan }}"
      with_dict: "{{ clusters }}"





